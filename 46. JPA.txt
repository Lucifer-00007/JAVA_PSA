Videos Class: 27/10/23 


--------------------------------------------------------------------------------------------
#JPA:
    - JAVA Persistance API is a java specification for managing relational data in JAVA Application.
    - It provides a standard way to map Java objects to relational database tables and perform database operations using Java objects.


--------------------------------------------------------------------------------------------
#Note: 
    - 'JPA' is a concept and it is implemented in 'Hibernate', 'openJPA', 'eclipseLink'. Just like 'OOPS' is a concept and it is implemented in JAVA, C++, C# etc.    

    - 'Hibernate': 
        - It is used for Object Relation Mapping (ORM). 
        - It performs ORM using 'Serialization' and 'Deserialization'. 



--------------------------------------------------------------------------------------------
#Serialization and Deserialization:
    
    -> [Object] ------ (Serialization) ------> [Database] 
    
    -> [Object] <------ (Deserialization) ------ [Database] 

    
    - Serialization: The Object data is converted to 0,1 (binary data) and transmitter to the database. 
    - Deserialization: The reverse process of Serialization. 


--------------------------------------------------------------------------------------------
# Steps In JPA:
    1. Create Entity Class
    2. Configure Application properties file
    3. Create Repository Layer
    4. Run the project 


--------------------------------------------------------------------------------------------
#Entity Class:
    - This class's objects data should goes to the database. 

#Note: Only "Entity Class" object data hibernate can put into the database. But not with any ordinary class.


--------------------------------------------------------------------------------------------
# Database Connection in STS:   
    - In 'src/main/resources' > application.properties
    - Configure the database information.

    EX:
        # Database Configuration
        spring.datasource.url=jdbc:mysql://localhost:3306/your_database
        spring.datasource.username=your_username
        spring.datasource.password=your_password
        spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

        # Hibernate Configuration
        spring.jpa.show-sql=true
        spring.jpa.hibernate.ddl-auto=update
        spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQLDialect

        # Server Configuration
        server.port=8080

        # Logging Configuration
        logging.level.root=info

        # Application-specific properties
        custom.property=value



--------------------------------------------------------------------------------------------
-> How do we get Hibernate in our project?
    - using Spring Data JDA


-> What is HQL:
    - Hibernate Query Language.
    - It is generated by hibernate to interact with the database.


-> What is Entity Class?
    - It is the class whose objects are mapped to the database.   


--------------------------------------------------------------------------------------------
@Tables(name="table_name")
    - This annotation is used outside the class to set a different table name for the class name.

--------------------------------------------------------------------------------------------
--------------------------------------------------------------------------------------------
--------------------------------------------------------------------------------------------
--------------------------------------------------------------------------------------------




