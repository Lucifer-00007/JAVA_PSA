# Frontend:
    Location:  project_folder/src/webapp


---------------------------------------------------------------------------------------------------
# Backend:
    Location:  project_folder/Java Resources/
    - create a new package > give "any class name"
    - right click on th package > new > "Servlet"


---------------------------------------------------------------------------------------------------
Ex1 (Get all user data):
    //In backend

    package p1;

    import java.io.IOException;
    import java.io.PrintWriter;
    import java.sql.Connection;
    import java.sql.DriverManager;
    import java.sql.ResultSet;
    import java.sql.Statement;

    import javax.servlet.ServletException;
    import javax.servlet.annotation.WebServlet;
    import javax.servlet.http.HttpServlet;
    import javax.servlet.http.HttpServletRequest;
    import javax.servlet.http.HttpServletResponse;

    @WebServlet("/getusers")
    public class getusers extends HttpServlet {
        private static final long serialVersionUID = 1L;

        public getusers() {
            super();
        }

        protected void doGet(HttpServletRequest request, HttpServletResponse response)throws ServletException, IOException {
            response.setContentType("text/html");
            PrintWriter out = response.getWriter();
            // out.print("hello");
            // out.print("<input type='text' />");

            try {
                Class.forName("com.mysql.cj.jdbc.Driver");

                Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/jdbc_users_data", "Admin",
                        "Temp123#");

                Statement stmnt = con.createStatement();
                ResultSet result = stmnt.executeQuery("select * from users");

                out.print("<table>");
                out.print("<tr>");

                out.print("<th>");
                out.print("Name");
                out.print("</th>");

                out.print("<th>");
                out.print("Email");
                out.print("</th>");

                out.print("<th>");
                out.print("Phone");
                out.print("</th>");

                out.print("<th>");
                out.print("City");
                out.print("</th>");

                out.print("</tr>");

                while (result.next()) {
                    out.print("<tr>");

                    out.print("<td>");
                    out.print(result.getString(1));
                    out.print("</td>");

                    out.print("<td>");
                    out.print(result.getString(2));
                    out.print("</td>");

                    out.print("<td>");
                    out.print(result.getString(3));
                    out.print("</td>");

                    out.print("<td>");
                    out.print(result.getString(4));
                    out.print("</td>");

                    out.print("</tr>");
                }

                out.print("</table>");
            } catch (Exception e) {
                e.printStackTrace();
            }

        }

        protected void doPost(HttpServletRequest request, HttpServletResponse response)
                throws ServletException, IOException {
        }
    }


---------------------------------------------------------------------------------------------------
Ex2 (Login page):
    //In backend

    package p1;

    import java.io.IOException;
    import java.sql.Connection;
    import java.sql.DriverManager;
    import java.sql.SQLException;
    import java.sql.Statement;

    import javax.servlet.ServletException;
    import javax.servlet.annotation.WebServlet;
    import javax.servlet.http.HttpServlet;
    import javax.servlet.http.HttpServletRequest;
    import javax.servlet.http.HttpServletResponse;


    @WebServlet("/login")
    public class Login extends HttpServlet {
        private static final long serialVersionUID = 1L;
        public Login() {
            super();
            // TODO Auto-generated constructor stub
        }


        protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
            System.out.println("Get");
        }


        protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
            //System.out.println("Post");
            String name = request.getParameter("name");
            String email = request.getParameter("email");
            String phone = request.getParameter("phone");
            String city = request.getParameter("city");
            
            Connection con = null;
            try {
                Class.forName("com.mysql.cj.jdbc.Driver");
                
                con = DriverManager.getConnection("jdbc:mysql://localhost:3306/jdbc_users_data", "Admin", "Temp123#");
                
                Statement stmnt = con.createStatement();
                stmnt.executeUpdate("insert into users values(' "+name+" ', ' "+email+" ', ' "+phone+" ', ' "+city+" ')");
                
                System.out.print("User data Added To Database Successfully!");	
            } catch (Exception e) {
                e.printStackTrace();
            }finally {
                try {
                    if (con != null) {
                        con.close();
                    }
                } catch (SQLException e) {
                    e.printStackTrace();
                }
            }
        }

    }


---------------------------------------------------------------------------------------------------
#Interservlet Communication:
    - In this the "first servlet" calls the "second servlet" using "request dispatcher".
    - When we use "request dispatcher" we can use "request.setAttribute() & request.getAttribute()" to transfer data also.
  

Ex: In web_app_2 project

---------------------------------------------------------------------------------------------------
# request.setSession()  & request.getSession():
    - "request.setSession()" is used to store any value. 
    - Once we store any value in "request.setSession()" that value becomes permanent.
    - It doesn't require "request dispatcher"
    - "request.getSession()" is used to read the value.
    - To remove the data we use "session.invalidate()".
    - Note: In todays world we do not use this technology since it is outdated.    


    Ex:
        //Set the session attribute
        import javax.servlet.annotation.WebServlet;
        import javax.servlet.http.HttpServlet;
        import javax.servlet.http.HttpServletRequest;
        import javax.servlet.http.HttpServletResponse;
        import javax.servlet.http.HttpSession;
        import java.io.IOException;

        @WebServlet(name = "SetSessionAttributeServlet", urlPatterns = {"/set-session"})
        public class SetSessionAttributeServlet extends HttpServlet {

            protected void doPost(HttpServletRequest request, HttpServletResponse response) throws IOException {
                HttpSession session = request.getSession();

                // Set a session attribute to store data for the user. In this case, we're storing a user's name.
                session.setAttribute("username", "JohnDoe");

                response.getWriter().write("Session attribute 'username' set to 'JohnDoe'");
            }
        }


        //retrieve and display the session attribute
        import javax.servlet.annotation.WebServlet;
        import javax.servlet.http.HttpServlet;
        import javax.servlet.http.HttpServletRequest;
        import javax.servlet.http.HttpServletResponse;
        import javax.servlet.http.HttpSession;
        import java.io.IOException;

        @WebServlet(name = "GetSessionAttributeServlet", urlPatterns = {"/get-session"})
        public class GetSessionAttributeServlet extends HttpServlet {

            protected void doGet(HttpServletRequest request, HttpServletResponse response) throws IOException {
                //avoid create a new session if any session associated with the current request doesn't already exist.
                HttpSession session = request.getSession(false);

                if (session != null) {
                    // Retrieve the session attribute we previously set and display it.
                    String username = (String) session.getAttribute("username");
                    response.getWriter().write("Session attribute 'username' is: " + username);
                } else {
                    response.getWriter().write("Session not found. Please set the session first.");
                }
            }
        }

  

---------------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------------
