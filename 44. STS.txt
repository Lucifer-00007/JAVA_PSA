# Spring Boot, Hibernate, API's and Micro-Services.

---------------------------------------------------------------------------------------------
# Spring Boot(4.8.1) Download:
    URL: https://www.oracle.com/java/technologies/downloads/#jdk17-windows


---------------------------------------------------------------------------------------------
#Setup STS:
    - windows > preference > Install JREs > Add > Standard VM > Next > directory > Select JDK version till the 'bin' folder
    - Check the correct(JDK 1.8) 'checkbox' > Apply and Next 


#Create new Project:
    - file > new > Spring Starter Project 
    
    - Set these:
        - Name: Give any name to the project.
        - Type: Mavel
        - Java version: 8
        - Group: com.demo 
        - Artifact: It should be exactly same to the given 'Name'
        - Package: com.demo.psa (it should be line 'Group.any_name' or only 'Group')
        - Service URL: It is the link from where 'Spring boot project structure' is downloaded.  

    - Now Click 'next' > select 'spring boot version 2.7.17' > 'finish'
       
    - Note: While creating the project keep the PC connected to internet. 



---------------------------------------------------------------------------------------------
# Note: In "Spring Boot Starter Project" 'pom.xml' file is used download 'Maven Dependencies'.

    - How to add a Dependency:
        - Go to https://mvnrepository.com
        - Search your_required_dependency and select the required version.
        - Now copy the Maven-xml-code and paste it in pom.xml inside "<dependencies> </dependencies>" tag. 



---------------------------------------------------------------------------------------------
# Types of Software Testing:
    - BlackBox Testing
    - Functional Testing
    - WiteBox Testing/Unit Testing


---------------------------------------------------------------------------------------------
#CRUD Repository vs JPA Repository in STS:
    - Note1: 'CRUD repositories' has some limitations thus 'JPA Repository' was introduced.
    - Note2: 'JPA Repository' has all features of 'CRUD repositories' with some extra features like: 'Pagination', 'Sorting', etc.


---------------------------------------------------------------------------------------------
# Web App in STS:
    - Required Dependencies(while creation):
        - Spring Data JPA
        - MySQL Driver
        - Spring Web

    - 'Spring Web' Dependency give ability to develope: 
        - MVC Architecture 
        - Web application, (ie. we can add the frontend)
        - API Development (Restful API)

    - Create a new folder for JSP(ie. for Frontend):
        - Go to 'src' folder > main > create folder like 'webapp/WEB_INF/'         
        - Inside this create folder name 'views'


->Note1: When we create a 'web application' in STS its necessary to add the 'mysql db details' in 'application.properties' file.

-> Adding 'tomcat-embed-jasper'
    - In 'pom.xml' file add this:
        <dependency>
            <groupId>org.apache.tomcat.embed</groupId>
            <artifactId>tomcat-embed-jasper</artifactId>
            <scope>provided</scope>
        </dependency>


->Note2: 
    - All 'HTML files' should be created inside the 'template' folder.
    - All 'Static files' like 'images' should be created inside the 'static' folder.
    - All 'JSP files' should be kept inside 'src/main/webapp/WEB_INF/'


---------------------------------------------------------------------------------------------
-> What is @ModelAttribute?
    - It is an optional attribute(may or may not be used).
    - It is used to read data from the '<form>' and put that into 'Entity class object' in the 'Controller Layer'.


---------------------------------------------------------------------------------------------
-> DTO(Data Transfer Object):
    - 


---------------------------------------------------------------------------------------------
#Note(Add Live Loading): To auto reload the project, when we save the changes in the code.
    - Right click on 'your_project' > Spring > 'Add DevTools'
    - Now auto reload of the project will work.


---------------------------------------------------------------------------------------------



---------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------




